window.addEventListener('DOMContentLoaded', function () {
    {
        let s = 0,
            o = !1;
        const e = $("#carousel");
        setInterval(() => {
            if (o) {
                o = !1;
                return
            }
            const e = $$("#carousel > div > a")[s];
            let t = undefined; // e.offsetWidth + parseInt(window.getComputedStyle(e).marginLeft) * 2
            $("#carousel > div").appendChild(e.cloneNode(!0)), $("#carousel > div").style.transform = `translateX(-${t*s}px)`, s++
        }, 4e3); // , e.onscroll = () => o = !0
        let t = !1,
            i, n;
            /*
        e.addEventListener("mousedown", t => {
            t.preventDefault(), n = t.pageX, i = e.scrollLeft, $("body").classList.add("grabbing")
        }), e.addEventListener("click", e => {
            t && e.preventDefault()
        })*/
         $("body").addEventListener("mouseup", e => {
            setTimeout(() => t = !1, 1), n = null, $("body").classList.remove("grabbing")
        }), $("body").addEventListener("mousemove", s => {
            if (!n) return;
            const o = n - s.pageX;
            Math.abs(o) > 10 && (t = !0), t && (e.scrollLeft = i + o)
        })
    } {
        const e = [];
        $$(".__js-animation").forEach(t => {
            let n = 0;
            [...t.children].forEach((t, s, o) => {
                e.push({
                    func: () => t.style.opacity = 0,
                    time: 0
                }), e.push({
                    func: () => t.style.opacity = 1,
                    time: n
                }), n += parseInt(t.dataset.animationDuration || 100 / o.length)
            })
        });
        let t = 0;
        setInterval(() => {
            e.forEach(({
                func: e,
                time: n
            }) => t % 100 >= n && e()), t++
        }, 100)
    }
});